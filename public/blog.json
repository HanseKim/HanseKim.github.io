[
  {
    "id": 0,
    "title": "페이지 소개",
    "date": "25.03.13",
    "bgcolor": "gray",
    "sections": [
      {
        "type": "text",
        "content": "이 페이지는 React와 TypeScript를 사용하여 직접 개발한 개인 포트폴리오 웹사이트입니다. 프로젝트 소개, 깃허브, 노션 등 다양한 작업물을 한눈에 확인할 수 있도록 구성했습니다."
      },
      {
        "type": "heading",
        "content": "🖥️ 주요 화면 구성"
      },
      {
        "type": "list",
        "content": [
          "홈 (진행한 프로젝트 전체 보기)",
          "프로젝트 상세 페이지 (기술 스택, 주요 기능, 개발 후기)",
          "깃허브 주소 바로가기",
          "노션 포트폴리오 바로가기",
          "자동매매 수익률 (기능 구현 예정)"
        ]
      },
      {
        "type": "heading",
        "content": "🛠️ 기술 스택"
      },
      {
        "type": "list",
        "content": [
          "React + TypeScript (프론트엔드)",
          "모듈화된 컴포넌트 설계 (Card, Detail, Home, SideBar 등)",
          "Context API (전역 상태 관리)",
          "Styled Components (디자인 일부)",
          "Vercel 배포 예정"
        ]
      },
      {
        "type": "heading",
        "content": "✨ 특별한 점"
      },
      {
        "type": "list",
        "content": [
          "다양한 프로젝트를 카드 형식으로 한눈에 보기 쉽게 구성",
          "직접 구현한 SideBar와 Header로 일관된 UI 제공",
          "향후 자동매매 수익률 시각화 기능 추가 예정 (그래프, 통계 등)"
        ]
      },
      {
        "type": "heading",
        "content": "📂 파일 구조 (src 기준)"
      },
      {
        "type": "text",
        "content": "📦 src\n ┣ 📂 colorUtils   (컬러 테마 관리)\n ┃ ┗ 📜 Color.ts\n ┣ 📂 Component   (화면 구성 컴포넌트)\n ┃ ┣ 📜 Card.tsx   (프로젝트 카드 컴포넌트)\n ┃ ┣ 📜 Detail.tsx   (프로젝트 상세 정보 컴포넌트)\n ┃ ┣ 📜 Home.tsx   (메인 페이지)\n ┃ ┗ 📜 SideBar.tsx   (사이드 메뉴)\n ┣ 📂 Footer   (푸터)\n ┃ ┗ 📜 Footer.tsx\n ┣ 📂 Header   (헤더)\n ┃ ┗ 📜 Header.tsx\n ┣ 📂 image   (이미지 리소스)\n ┣ 📜 App.css\n ┣ 📜 App.test.tsx\n ┣ 📜 App.tsx\n ┣ 📜 index.css\n ┣ 📜 index.tsx\n ┣ 📜 logo.svg\n ┣ 📜 react-app-env.d.ts\n ┣ 📜 reportWebVitals.ts\n ┗ 📜 setupTests.ts\n"
      }
    ]
  },
  {
    "id": 3,
    "title": "MoiGO",
    "date": "25.06 ~ 진행중",
    "bgcolor": "orange",
    "sections": [
      {
        "type": "text",
        "content": "\"3일 걸릴 모임 준비, 단 3분만에\" - 스포츠 관람을 위한 사람과 공간을 연결하는 올인원 플랫폼입니다. 혼자서 스포츠 경기를 보는 것이 아쉬운 사용자들을 위해 함께 응원할 사람을 찾고, 원하는 경기를 중계하는 가게를 예약할 수 있는 서비스를 제공합니다."
      },
      {
        "type": "heading",
        "content": "📱 앱 화면"
      },
      {
        "type": "image",
        "content": "Moigo/moigo.png"
      },
      {
        "type": "heading",
        "content": "🛠️ 기술 스택"
      },
      {
        "type": "list",
        "content": [
          "FrontEnd: React Native (Expo)",
          "BackEnd: Node.js, Express",
          "DB: MySQL",
          "상태관리: Zustand",
          "API 통신: React Query",
          "실시간 통신: Socket.IO",
          "배포: Xcode TestFlight",
          "지도 서비스: Google Maps SDK (미완성)"
        ]
      },
      {
        "type": "heading",
        "content": "💡 주요 기능"
      },
      {
        "type": "list",
        "content": [
          "사용자 인증 시스템 (JWT 토큰 기반)",
          "역할별 서비스 (일반 사용자/사업자)",
          "모임 생성 및 참여 (예약 시스템)",
          "위치 기반 매장 검색 (미완성)",
          "에스크로 결제 시스템 (예약금 자동 관리) (사업자등록증 필요)",
          "실시간 커뮤니케이션 (채팅)",
          "실시간 경기 정보 API 연동",
          "리뷰 시스템 및 사용자 관리",
          "매장 운영 대시보드 (사업자용)",
          "채팅방 관리 (입장/나가기/강퇴 기능)"
        ]
      },
      {
        "type": "heading",
        "content": "✨ 프로젝트의 특별한 점"
      },
      {
        "type": "list",
        "content": [
          "올인원 플랫폼으로 모임 생성부터 장소 예약까지 통합 제공",
          "창업 해커톤에서 MVP 개발 완료 및 우수상 수상",
          "React Native + Expo로 크로스플랫폼 모바일 앱 개발",
          "Zustand와 React Query를 활용한 효율적인 상태 관리",
          "Socket.IO를 통한 실시간 채팅 및 알림 시스템",
          "사업자와 일반 사용자 역할 분리로 맞춤형 서비스 제공",
          "스포츠 관람 문화 확산과 지역 상권 활성화 동시 실현",
          "에스크로 결제로 노쇼 방지 및 안전한 거래 보장"
        ]
      },
      {
        "type": "heading",
        "content": "🚧 현재 진행 상황"
      },
      {
        "type": "list",
        "content": [
          "MVP 개발 완료 및 TestFlight 배포",
          "사용자 인증, 모임 관리, 채팅 시스템 구현 완료",
          "사장님 전용 대시보드 및 예약 관리 시스템 완료",
          "부산 지역 베타 테스트 진행 예정"
        ]
      },
      {
        "type": "heading",
        "content": "💰 비즈니스 모델"
      },
      {
        "type": "list",
        "content": [
          "예약금 수수료 (예약금의 3-5%)",
          "가게 구독 서비스 (사장님 프리미엄 기능)",
          "스포츠 관련 브랜드 타겟 광고",
          "전국 서비스 확장을 통한 규모 확대"
        ]
      },
      {
        "type": "heading",
        "content": "🔑 개발 과정에서 얻은 것"
      },
      {
        "type": "list",
        "content": [
          "창업 해커톤을 통한 실제 서비스 개발 및 배포 경험",
          "React Native + Expo로 모바일 앱 개발 및 TestFlight 배포",
          "Zustand와 React Query를 활용한 현대적인 상태 관리 학습",
          "에스크로 결제 시스템 구현으로 안전한 거래 시스템 구축 (사업자등록증 필요)",
          "사업자 등록 등 법적 요구사항에 대한 이해",
          "팀 협업을 통한 커뮤니케이션의 중요성 깨달음",
          "AI 도구(Cursor) 활용을 통한 효율적인 개발 프로세스 체험"
        ]
      },
      {
        "type": "heading",
        "content": "📱 배포 정보"
      },
      {
        "type": "list",
        "content": [
          "GitHub: https://github.com/2025-PNU-SW-Hackathon/PNUSW-2025-go-16",
          "TestFlight: 베타 테스트 진행 중",
          "팀명: 모이GO (사람을 잇는 시작)",
          "참여 공모전: 2025 PNU SW 해커톤",
          "팀 구성: 5명 (윤대한, 김재혁, 정예준, 박태원, 김세한)"
        ]
      }
    ]
  },
  {
    "id": 1,
    "title": "취뽀해",
    "date": "24.02.25 ~ ",
    "bgcolor": "blue",
    "sections": [
      {
        "type": "text",
        "content": "취업 준비생과 파트너(멘토)를 연결해주는 플랫폼입니다. 채팅, 상담, 취업수기 공유 등 다양한 소통 기능을 제공합니다."
      },
      {
        "type": "heading",
        "content": "🛠️ 기술 스택"
      },
      {
        "type": "list",
        "content": [
          "FrontEnd: React, TypeScript",
          "BackEnd: Spring, fast-api (다른 팀원들 파트)",
          "DB: MySQL",
          "JWT 토큰 기반 인증",
          "Axios (apiClient 모듈화)",
          "WebSocket (채팅 실시간 통신)",
          "Figma 디자인"
        ]
      },
      {
        "type": "heading",
        "content": "💡 주요 기능"
      },
      {
        "type": "list",
        "content": [
          "회원가입 / 로그인 (JWT 인증)",
          "마이페이지: 사용자 정보 확인, 수정, 로그아웃",
          "파트너/클라이언트 역할 구분 (화면 다르게)",
          "채팅 (WebSocket)",
          "상담 신청 및 수락",
          "파트너: 일주일 상담 예약 캘린더, 수락된 상담 목록, 회사 정보 등록, 취업수기 작성, 리뷰 관리",
          "클라이언트: 인기 취업수기, 인기 파트너 목록, 상담 신청, 최근 본 파트너, 리뷰 작성",
          "전화 기능 (미완성), 전화 후 리뷰 작성 (미완성)",
          "검색/탐색 기능 (미완성)"
        ]
      },
      {
        "type": "heading",
        "content": "✨ 프로젝트의 특별한 점"
      },
      {
        "type": "list",
        "content": [
          "파트너-클라이언트 역할에 따라 다른 메인 화면과 기능 제공",
          "일주일 상담 일정 캘린더 시각화 (파트너)",
          "상담 내역 카드로 한눈에 보기 쉽게 디자인",
          "취업수기, 리뷰 등 커뮤니티 요소 포함 (작성/조회)",
          "JWT 인증 및 API 통신 모듈화(apiClient)로 유지보수와 확장성 고려",
          "WebSocket을 활용한 실시간 채팅 구현",
          "전화 및 리뷰, 검색 기능 등 확장 예정"
        ]
      },
      {
        "type": "heading",
        "content": "🚧 현재 진행 상황"
      },
      {
        "type": "list",
        "content": [
          "파트너/클라이언트 기본 로그인, 회원가입, 역할 분리 완료",
          "상담 목록 카드, 캘린더 구현 (파트너)",
          "채팅 기본 구현 (WebSocket)",
          "파트너 마이페이지(회사 정보, 취업수기) 기본 구조 완성",
          "클라이언트 인기 취업수기, 파트너 리스트 카드 완성",
          "전화 기능, 리뷰, 검색 기능은 DB 및 API 미완성 (진행 예정)"
        ]
      },
      {
        "type": "heading",
        "content": "🔑 개발 과정에서 얻은 것"
      },
      {
        "type": "list",
        "content": [
          "React TypeScript로 실제 서비스 수준의 웹 개발 경험",
          "JWT 인증과 WebSocket 통신을 통한 보안/실시간 기능 학습",
          "프론트엔드-백엔드 API 통신 (Axios 모듈화)로 코드 관리 수월",
          "파트너/클라이언트 역할 분리로 복잡한 권한 관리 처리",
          "UX 중심의 카드/캘린더 UI 직접 제작"
        ]
      }
    ]
  },  
  {
    "id": 2,
    "title": "너의 하루는",
    "date": "25.01.13 ~ 25.02.24",
    "bgcolor": "pink",
    "sections": [
      {
        "type": "text",
        "content": "귀엽고 감성적인 커플 전용 다이어리 앱입니다. 커플과 함께 일기를 공유하고 감정 분석, D-Day 계산 등 다양한 기능을 제공합니다."
      },
      {
        "type": "image",
        "content": ["diary/diary1.png", "diary/diary2.png"]
      },
      {
        "type": "heading",
        "content": "🛠️ 기술 스택"
      },
      {
        "type": "list",
        "content": [
          "FrontEnd: React Native (CLI)",
          "BackEnd: Node.js, Express",
          "DB: MySQL (Workbench)",
          "JWT 토큰 기반 인증",
          "Axios (apiClient 모듈화)",
          "Figma 디자인",
          "Xcode TestFlight 배포"
        ]
      },
      {
        "type": "heading",
        "content": "💡 주요 기능"
      },
      {
        "type": "list",
        "content": [
          "회원가입 / 로그인 (JWT 인증)",
          "마이페이지: 사용자 정보 확인, 로그아웃",
          "달력 기반 일기 관리 (작성, 수정, 삭제, 조회, 검색)",
          "감정 이모지 기록 및 월별 감정 통계",
          "커플 연결 다이어리, D-Day 계산",
          "채팅 기능 (팀원 개발)"
        ]
      },
      {
        "type": "heading",
        "content": "✨ 프로젝트의 특별한 점"
      },
      {
        "type": "list",
        "content": [
          "감정 이모지를 통한 한달 감정 분석 기능 (일기와 연동)",
          "핑크톤의 감성적이고 귀여운 UI (Figma 디자인, 직접 구현)",
          "Xcode TestFlight 배포 경험 (앱 빌드부터 배포까지 전과정 직접 수행)",
          "React Native 모바일 앱 개발 + Node.js 백엔드 구축 (풀스택)",
          "JWT 인증 및 API 통신 모듈화(apiClient)로 확장 가능한 구조 설계",
          "SafeAreaView로 모바일 UI 최적화 (키보드 이슈 해결)"
        ]
      },
      {
        "type": "heading",
        "content": "🔑 개발 과정에서 얻은 것"
      },
      {
        "type": "list",
        "content": [
          "백엔드/DB(Express, MySQL) 처음부터 직접 구축, SQL 쿼리 학습 (일기 카운트, 통계 등)",
          "Xcode 설정, 배포 직접 해결 (가장 큰 난관)",
          "React Native UI/UX 이슈 (키보드 올라올 때 깨짐) → SafeAreaView로 해결",
          "두 명이 협업 (채팅 기능 분담, 나머지 전 기능 직접 개발)"
        ]
      }
    ]
  }
]
